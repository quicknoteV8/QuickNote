{"version":3,"sources":["components/NavBar.js","pages/new.js","components/ListNotes.js","pages/index.js","pages/show.js","pages/edit.js","db.js","App.js","serviceWorker.js","index.js"],"names":["components_NavBar","react_default","a","createElement","className","react_router_dom","to","href","NewNotePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","note","title","body","saving","onSave","objectSpread","res","history","replace","concat","id","e","setState","defineProperty","target","name","value","_this2","onSubmit","preventDefault","handleSave","type","onChange","updateValue","React","Component","Note","_ref","_ref$note","_id","updatedAt","dayjs","format","renderDate","components_ListNotes","_ref2","notes","map","n","ListNotes_Note","key","IndexPage","values","sort","b","Date","length","ShowPage","onClick","onDelete","EditNotePage","PureComponent","DB","db","PouchDB","allDocs","include_docs","allNotes","rows","forEach","doc","post","remove","App","asyncToGenerator","regenerator_default","mark","_callee","method","wrap","_context","prev","next","createNote","sent","_rev","rev","abrupt","stop","_x","_x2","apply","arguments","loading","getAllNotes","window","confirm","deleteNote","react_router","exact","path","component","pages","assign","show_ShowPage","match","params","handleDelete","pages_new","edit","renderContent","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d959efb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport '../styles/NavBar.css'\r\n\r\n\r\nexport default () => (\r\n    <nav className = \"navbar\">\r\n        <Link to=\"/\"><h1>ðŸ“– Quick Notes</h1></Link>\r\n        <span className = \"navbar-buttons\">\r\n            <Link className = \"btn\" to = \"/new\">New Note</Link>\r\n            <a className = 'btn' href=\"https://docs.google.com/document/d/1dL7Uskzj5-_A59lksadREb78ay-bTC-QQ1u6uJo66PA/edit?usp=sharing\">Help</a>\r\n        </span>\r\n    </nav>\r\n)\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/form.css'\r\n\r\nclass NewNotePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { \r\n            note: {\r\n                title: '',\r\n                body: '',\r\n            },\r\n            saving: false\r\n        }\r\n    }\r\n\r\n    async handleSave() {\r\n\r\n        const res = await this.props.onSave({ ...this.state.note });\r\n\r\n        this.props.history.replace(`/notes/${ res.id }`)\r\n    }\r\n\r\n    updateValue(e) {\r\n        let { note } = this.state;\r\n\r\n        this.setState({ note: { ...note, [e.target.name]: e.target.value }});\r\n    }\r\n\r\n    render() {\r\n        const { note } = this.state;\r\n\r\n        return (\r\n            <div className=\"note-form\">\r\n                <h1>New Note</h1>\r\n                <form onSubmit={(e) => { e.preventDefault(); this.handleSave(); }}>\r\n                    <div className=\"note-form-field\">\r\n                        <label>Title</label>\r\n                        <input type=\"text\" name=\"title\" value={note.title} onChange={(e) => this.updateValue(e)} />\r\n                    </div>\r\n                    <div className=\"note-form-field note-form-field-text\">\r\n                        <textarea name=\"body\" value={note.body} onChange={(e) => this.updateValue(e)} />\r\n                    </div>\r\n                    <div className=\"note-form-buttons\">\r\n                        <input type=\"submit\" value=\"Save\"/>\r\n                        <Link to={`/`}>Cancel</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewNotePage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nimport '../styles/ListNotes.css'\r\n\r\nfunction renderDate(updatedAt) {\r\n    let date = dayjs(updatedAt);\r\n    return date.format(\"MMMM D YYYY, HH:mm\");\r\n}\r\n\r\nconst Note = ({ note: { _id, title, body, updatedAt } }) => (\r\n    <div className=\"notes-list-item\">\r\n        <h2><Link to={`/notes/${_id}`}>{ title }</Link></h2>\r\n        <span className=\"notes-list-date\">\r\n            { renderDate(updatedAt) }\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default ({ notes }) => (\r\n    <div className=\"notes-list\">\r\n        {notes.map(n => <Note note={n} key={`note-${n._id}`}/> )}\r\n    </div>\r\n);\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport ListNotes from '../components/ListNotes.js';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass IndexPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let notes = Object.values(props.notes)\r\n        notes.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt));\r\n\r\n        this.state = { notes };\r\n    }\r\n\r\n    render() {\r\n        let { notes } = this.state;\r\n\r\n\r\n        if (!notes.length) {\r\n            return (\r\n                <div className=\"app-intro\">\r\n                    <h2>Welcome to QuickNotes!</h2>\r\n                    <p>You don't have any notes. <Link className=\"btn\" to=\"/new\">Get started!</Link></p>\r\n                    <p>Dont worry about logging in, all your notes will be stored in your browser.</p>\r\n                    <p>(Dont clear your browser cookies or your notes will be lost.</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Notes</h1>\r\n                <ListNotes notes={this.state.notes}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexPage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from 'dayjs';\r\n\r\nimport '../styles/form.css'\r\n\r\nexport default class ShowPage extends React.Component {\r\n   \r\n    renderDate() {\r\n        let date = dayjs(this.props.note.updatedAt)\r\n        return date.format(\"MMMM D YYYY, HH:mm\")\r\n        }\r\n\r\n    render() {\r\n        const { note } = this.props;\r\n\r\n        if (!note) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>{ note.title }</h1>\r\n                <div className=\"note-created\">\r\n                    {this.renderDate()}\r\n                    <Link className=\"note-edit\" to={`/notes/${note._id}/edit`}> Edit </Link>\r\n                    <button className=\"btn\" onClick={ (e) => this.props.onDelete(note._id) }>Delete</button>\r\n                </div>\r\n                <div>{ note.body }</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/form.css'\r\n\r\nclass EditNotePage extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            note: {\r\n                title: '',\r\n                body: '',\r\n            },\r\n            saving: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ note: {...this.props.note} });\r\n    }\r\n\r\n    async handleSave() {\r\n        this.setState({ saving: true });\r\n\r\n        const res = await this.props.onSave({ ...this.state.note });\r\n\r\n        this.props.history.replace(`/notes/${res.id}`)\r\n    }\r\n\r\n    updateValue(e) {\r\n        let { note } = this.state;\r\n\r\n        this.setState({ note: { ...note, [e.target.name]: e.target.value } });\r\n    }\r\n\r\n    render() {\r\n        const { note } = this.state;\r\n\r\n        return (\r\n            <div className=\"note-form\">\r\n                <h1>Edit Note</h1>\r\n                <form onSubmit={(e) => { e.preventDefault(); this.handleSave(); }}>\r\n                    <div className=\"note-form-field\">\r\n                        <label>Title</label>\r\n                        <input type=\"text\" name=\"title\" value={note.title} onChange={(e) => this.updateValue(e)} />\r\n                    </div>\r\n                    <div className=\"note-form-field note-form-field-text\">\r\n                        <textarea name=\"body\" value={note.body} onChange={(e) => this.updateValue(e)} />\r\n                    </div>\r\n                    <div className=\"note-form-buttons\">\r\n                        <input type=\"submit\" value=\"Save\" />\r\n                        <Link to={`/notes/${note._id}`}>Cancel</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditNotePage;\r\n","import PouchDB from 'pouchdb';\r\n\r\nexport default class DB {\r\n    constructor(name) {\r\n        this.db = new PouchDB(name);\r\n    }\r\n\r\n    async getAllNotes() {\r\n        let allNotes = await this.db.allDocs({ include_docs: true });\r\n        let notes = {};\r\n        \r\n        allNotes.rows.forEach(n => notes[n.id] = n.doc);\r\n\r\n        return notes;\r\n    }\r\n\r\n    async createNote(note) {\r\n        const res = await this.db.post({ ...note });\r\n\r\n        return res;\r\n    }\r\n    \r\n    async deleteNote(note) {\r\n        await this.db.remove(note);\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar.js';\nimport NewNotePage from './pages/new.js';\nimport IndexPage from './pages/index.js';\nimport ShowPage from './pages/show.js';\nimport EditNotePage from './pages/edit.js';\n\nimport DB from './db.js';\n\nimport './styles/app.css'\n\nclass App extends React.Component {\n    constructor(props) {\n      super(props);\n      \n      let db = new DB('notedb')\n      this.state = { \n        db,\n        notes: [],\n        loading: true\n      };\n    }\n\n    async componentDidMount() {\n      const notes = await this.state.db.getAllNotes();\n  \n      this.setState({\n        notes,\n        loading: false\n      });\n    }\n\n    handleSave = async (note, method) => {\n      let res = await this.state.db.createNote(note);\n      let { notes } = this.state;\n      \n      note._id = res.id;\n      note._rev = res.rev;\n  \n      this.setState({\n        notes: { ...notes, [res.id]: note }\n      });\n  \n      return res;\n    }\n\n    async handleDelete(id) {\n      let { notes } = this.state;\n      let note = notes[id];\n  \n      if (notes[id] && window.confirm(\"Are you sure you want to delete this note?\")) {\n        await this.state.db.deleteNote(note);\n  \n        delete notes[id];\n        \n        this.setState({ notes });\n      }\n    }\n\n    renderContent(){\n      return (\n          <div className=\"app-content\">\n              <Route exact path = \"/\" component = {(props) => \n                <IndexPage {...props} notes = {this.state.notes} />} />\n              <Route exact path=\"/notes/:id\" component={(props) => (\n                <ShowPage {...props} note={this.state.notes[props.match.params.id]} onDelete={(id) => this.handleDelete(id) }/>) } />\n              <Route exact path = \"/new\" component = {(props) => \n                <NewNotePage {...props} onSave = {this.handleSave} />} />\n               <Route path=\"/notes/:id/edit\" component={(props) => (\n                <EditNotePage {...props} note={this.state.notes[props.match.params.id]} onSave={(note) => this.handleSave(note, 'updateNote') }/>\n          ) } />\n          </div>\n      );\n    }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar/>\n          { this.renderContent() }\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}